umfpack_demo

Enter the printing level for UMFPACK's output statistics:
0: none, 1: errors only, 2: statistics, 4: print some of outputs
5: print all output [default is 1]: 2

--------------------------------------------------------------
Factor and solve a small system, Ax=b, using default parameters
(except for verbose printing enabled)
Solving Ax=b via UMFPACK:

umfpack: x = A\b
UMFPACK V5.0.1 (Aug 31, 2006), Control:
    Matrix entry defined as: double
    Int (generic integer) defined as: int

    1: print level: 2
    2: dense row parameter:    0.2
        "dense" rows have    > max (16, (0.2)*16*sqrt(n_col) entries)
    3: dense column parameter: 0.2
        "dense" columns have > max (16, (0.2)*16*sqrt(n_row) entries)
    4: pivot tolerance: 0.1
    5: block size for dense matrix kernels: 32
    6: strategy: 0 (auto)
    7: initial allocation ratio: 0.7
    8: max iterative refinement steps: 2
    13: 2-by-2 pivot tolerance: 0.01
    14: Q fixed during numerical factorization: 0 (auto)
    15: AMD dense row/col parameter:    10
       "dense" rows/columns have > max (16, (10)*sqrt(n)) entries
        Only used if the AMD ordering is used.
    16: diagonal pivot tolerance: 0.001
        Only used if diagonal pivoting is attempted.
    17: scaling: 1 (divide each row by sum of abs. values in each row)
    18: frontal matrix allocation ratio: 0.5
    19: drop tolerance: 0
    20: AMD and COLAMD aggressive absorption: 1 (yes)

    The following options can only be changed at compile-time:
    9: BLAS library used:  Fortran BLAS.  size of BLAS integer: 4
    10: compiled for MATLAB
    11: CPU timer is POSIX times ( ) routine.
    12: compiled for normal operation (debugging disabled)
    computer/operating system: Linux
    size of int: 4 UF_long: 8 Int: 4 pointer: 8 double: 8 Entry: 8 (in bytes)

UMFPACK V5.0.1 (Aug 31, 2006), Info:
    matrix entry defined as:          double
    Int (generic integer) defined as: int
    BLAS library used: Fortran BLAS.  size of BLAS integer: 4
    MATLAB:                           yes.
    CPU timer:                        POSIX times ( ) routine.
    number of rows in matrix A:       67
    number of columns in matrix A:    67
    entries in matrix A:              294
    memory usage reported in:         8-byte Units
    size of int:                      4 bytes
    size of UF_long:                  8 bytes
    size of pointer:                  8 bytes
    size of numerical entry:          8 bytes

    strategy used:                    unsymmetric
    ordering used:                    colamd on A
    modify Q during factorization:    yes
    prefer diagonal pivoting:         no
    pivots with zero Markowitz cost:               1
    submatrix S after removing zero-cost pivots:
        number of "dense" rows:                    0
        number of "dense" columns:                 0
        number of empty rows:                      0
        number of empty columns                    0
        submatrix S not square or diagonal not preserved
    symbolic factorization defragmentations:       1
    symbolic memory usage (Units):                 1639
    symbolic memory usage (MBytes):                0.0
    Symbolic size (Units):                         252
    Symbolic size (MBytes):                        0
    symbolic factorization CPU time (sec):         0.00
    symbolic factorization wallclock time(sec):    0.00

    matrix scaled: yes (divided each row by sum of abs values in each row)
    minimum sum (abs (rows of A)):              1.00000e+00
    maximum sum (abs (rows of A)):              6.59005e+00

    symbolic/numeric factorization:      upper bound               actual      %
    variable-sized part of Numeric object:
        initial size (Units)                    1711                 1577    92%
        peak size (Units)                       6115                 3581    59%
        final size (Units)                      1628                  677    42%
    Numeric final size (Units)                  2108                 1124    53%
    Numeric final size (MBytes)                  0.0                  0.0    53%
    peak memory usage (Units)                   7476                 4942    66%
    peak memory usage (MBytes)                   0.1                  0.0    66%
    numeric factorization flops          1.41920e+04          2.45200e+03    17%
    nz in L (incl diagonal)                      542                  322    59%
    nz in U (incl diagonal)                      902                  339    38%
    nz in L+U (incl diagonal)                   1377                  594    43%
    largest front (# entries)                    483                   80    17%
    largest # rows in front                       21                   10    48%
    largest # columns in front                    23                   11    48%

    initial allocation ratio used:                 0.7
    # of forced updates due to frontal growth:     0
    nz in L (incl diagonal), if none dropped       322
    nz in U (incl diagonal), if none dropped       339
    number of small entries dropped                0
    nonzeros on diagonal of U:                     67
    min abs. value on diagonal of U:               2.74e-02
    max abs. value on diagonal of U:               2.28e+00
    estimate of reciprocal of condition number:    1.20e-02
    indices in compressed pattern:                 262
    numerical values stored in Numeric object:     595
    numeric factorization defragmentations:        1
    numeric factorization reallocations:           1
    costly numeric factorization reallocations:    0
    numeric factorization CPU time (sec):          0.00
    numeric factorization wallclock time (sec):    0.00
    symbolic + numeric CPU time (sec):             0.00
    symbolic + numeric wall clock time (sec):      0.00

    solve flops:                                   6.16100e+03
    iterative refinement steps taken:              1
    iterative refinement steps attempted:          1
    sparse backward error omega1:                  1.69e-16
    sparse backward error omega2:                  0.00e+00
    solve CPU time (sec):                          0.00
    solve wall clock time (sec):                   0.00

    total symbolic + numeric + solve flops:        8.61300e+03
    total symbolic + numeric + solve CPU time:     0.00
    total symbolic+numeric+solve wall clock time:  0.00

Solving Ax=b via MATLAB:
Difference between UMFPACK and MATLAB solution: 0

--------------------------------------------------------------

Factorizing [L, U, P, Q, R] = umfpack (A)

P * (R\A) * Q - L*U should be zero:
norm (P*(R\A)*Q - L*U, 1) = 2.40256e-16 (exact) 2.40256e-16 (estimated)

Solution to Ax=b via UMFPACK factorization:
x = Q * (U \ (L \ (P * (R \ b))))

UMFPACK flop count: 2453

Factorizing [L, U, P] = lu (A (:, q))
If you are using a version of MATLAB prior to V6.0, then the
following statement (q = colamd (A)) may fail.  Either download
colamd from http://www.cise.ufl.edu/research/sparse, upgrade to
MATLAB V6.0 or later, or replace the statement with
q = colmmd (A) ;

Solution to Ax=b via MATLAB factorization:
x = U \ (L \ (P * b)) ; x (q) = x ;
Difference between UMFPACK and MATLAB solution: 2.13163e-14

MATLAB LU flop count: 3160

--------------------------------------------------------------
Solve A'x=b:
Solving A'x=b via UMFPACK:

umfpack: x = b/A
UMFPACK V5.0.1 (Aug 31, 2006), Control:
    Matrix entry defined as: double
    Int (generic integer) defined as: int

    1: print level: 2
    2: dense row parameter:    0.2
        "dense" rows have    > max (16, (0.2)*16*sqrt(n_col) entries)
    3: dense column parameter: 0.2
        "dense" columns have > max (16, (0.2)*16*sqrt(n_row) entries)
    4: pivot tolerance: 0.1
    5: block size for dense matrix kernels: 32
    6: strategy: 0 (auto)
    7: initial allocation ratio: 0.7
    8: max iterative refinement steps: 2
    13: 2-by-2 pivot tolerance: 0.01
    14: Q fixed during numerical factorization: 0 (auto)
    15: AMD dense row/col parameter:    10
       "dense" rows/columns have > max (16, (10)*sqrt(n)) entries
        Only used if the AMD ordering is used.
    16: diagonal pivot tolerance: 0.001
        Only used if diagonal pivoting is attempted.
    17: scaling: 1 (divide each row by sum of abs. values in each row)
    18: frontal matrix allocation ratio: 0.5
    19: drop tolerance: 0
    20: AMD and COLAMD aggressive absorption: 1 (yes)

    The following options can only be changed at compile-time:
    9: BLAS library used:  Fortran BLAS.  size of BLAS integer: 4
    10: compiled for MATLAB
    11: CPU timer is POSIX times ( ) routine.
    12: compiled for normal operation (debugging disabled)
    computer/operating system: Linux
    size of int: 4 UF_long: 8 Int: 4 pointer: 8 double: 8 Entry: 8 (in bytes)

UMFPACK V5.0.1 (Aug 31, 2006), Info:
    matrix entry defined as:          double
    Int (generic integer) defined as: int
    BLAS library used: Fortran BLAS.  size of BLAS integer: 4
    MATLAB:                           yes.
    CPU timer:                        POSIX times ( ) routine.
    number of rows in matrix A:       67
    number of columns in matrix A:    67
    entries in matrix A:              294
    memory usage reported in:         8-byte Units
    size of int:                      4 bytes
    size of UF_long:                  8 bytes
    size of pointer:                  8 bytes
    size of numerical entry:          8 bytes

    strategy used:                    unsymmetric
    ordering used:                    colamd on A
    modify Q during factorization:    yes
    prefer diagonal pivoting:         no
    pivots with zero Markowitz cost:               1
    submatrix S after removing zero-cost pivots:
        number of "dense" rows:                    0
        number of "dense" columns:                 0
        number of empty rows:                      0
        number of empty columns                    0
        submatrix S not square or diagonal not preserved
    symbolic factorization defragmentations:       1
    symbolic memory usage (Units):                 1639
    symbolic memory usage (MBytes):                0.0
    Symbolic size (Units):                         252
    Symbolic size (MBytes):                        0
    symbolic factorization CPU time (sec):         0.00
    symbolic factorization wallclock time(sec):    0.00

    matrix scaled: yes (divided each row by sum of abs values in each row)
    minimum sum (abs (rows of A)):              1.00000e+00
    maximum sum (abs (rows of A)):              6.59005e+00

    symbolic/numeric factorization:      upper bound               actual      %
    variable-sized part of Numeric object:
        initial size (Units)                    1711                 1577    92%
        peak size (Units)                       6115                 3581    59%
        final size (Units)                      1628                  677    42%
    Numeric final size (Units)                  2108                 1124    53%
    Numeric final size (MBytes)                  0.0                  0.0    53%
    peak memory usage (Units)                   7476                 4942    66%
    peak memory usage (MBytes)                   0.1                  0.0    66%
    numeric factorization flops          1.41920e+04          2.45200e+03    17%
    nz in L (incl diagonal)                      542                  322    59%
    nz in U (incl diagonal)                      902                  339    38%
    nz in L+U (incl diagonal)                   1377                  594    43%
    largest front (# entries)                    483                   80    17%
    largest # rows in front                       21                   10    48%
    largest # columns in front                    23                   11    48%

    initial allocation ratio used:                 0.7
    # of forced updates due to frontal growth:     0
    nz in L (incl diagonal), if none dropped       322
    nz in U (incl diagonal), if none dropped       339
    number of small entries dropped                0
    nonzeros on diagonal of U:                     67
    min abs. value on diagonal of U:               2.74e-02
    max abs. value on diagonal of U:               2.28e+00
    estimate of reciprocal of condition number:    1.20e-02
    indices in compressed pattern:                 262
    numerical values stored in Numeric object:     595
    numeric factorization defragmentations:        1
    numeric factorization reallocations:           1
    costly numeric factorization reallocations:    0
    numeric factorization CPU time (sec):          0.01
    numeric factorization wallclock time (sec):    0.00
    numeric factorization mflops (CPU time):       0.25
    symbolic + numeric CPU time (sec):             0.01
    symbolic + numeric mflops (CPU time):          0.25
    symbolic + numeric wall clock time (sec):      0.00

    solve flops:                                   6.05300e+03
    iterative refinement steps taken:              1
    iterative refinement steps attempted:          1
    sparse backward error omega1:                  1.28e-16
    sparse backward error omega2:                  0.00e+00
    solve CPU time (sec):                          0.00
    solve wall clock time (sec):                   0.00

    total symbolic + numeric + solve flops:        8.50500e+03
    total symbolic + numeric + solve CPU time:     0.01
    total symbolic + numeric + solve mflops (CPU): 0.85
    total symbolic+numeric+solve wall clock time:  0.00

Solving A'x=b via MATLAB:
Difference between UMFPACK and MATLAB solution: 5.32907e-15

--------------------------------------------------------------
Compute C = A', and compute the LU factorization of C.
Factorizing A' can sometimes be better than factorizing A itself
(less work and memory usage).  Solve C'x=b; the solution is the
same as the solution to Ax=b for the original A.

umfpack: numeric factorization
UMFPACK V5.0.1 (Aug 31, 2006), Control:
    Matrix entry defined as: double
    Int (generic integer) defined as: int

    1: print level: 2
    2: dense row parameter:    0.2
        "dense" rows have    > max (16, (0.2)*16*sqrt(n_col) entries)
    3: dense column parameter: 0.2
        "dense" columns have > max (16, (0.2)*16*sqrt(n_row) entries)
    4: pivot tolerance: 0.1
    5: block size for dense matrix kernels: 32
    6: strategy: 0 (auto)
    7: initial allocation ratio: 0.7
    8: max iterative refinement steps: 2
    13: 2-by-2 pivot tolerance: 0.01
    14: Q fixed during numerical factorization: 0 (auto)
    15: AMD dense row/col parameter:    10
       "dense" rows/columns have > max (16, (10)*sqrt(n)) entries
        Only used if the AMD ordering is used.
    16: diagonal pivot tolerance: 0.001
        Only used if diagonal pivoting is attempted.
    17: scaling: 1 (divide each row by sum of abs. values in each row)
    18: frontal matrix allocation ratio: 0.5
    19: drop tolerance: 0
    20: AMD and COLAMD aggressive absorption: 1 (yes)

    The following options can only be changed at compile-time:
    9: BLAS library used:  Fortran BLAS.  size of BLAS integer: 4
    10: compiled for MATLAB
    11: CPU timer is POSIX times ( ) routine.
    12: compiled for normal operation (debugging disabled)
    computer/operating system: Linux
    size of int: 4 UF_long: 8 Int: 4 pointer: 8 double: 8 Entry: 8 (in bytes)

UMFPACK V5.0.1 (Aug 31, 2006), Info:
    matrix entry defined as:          double
    Int (generic integer) defined as: int
    BLAS library used: Fortran BLAS.  size of BLAS integer: 4
    MATLAB:                           yes.
    CPU timer:                        POSIX times ( ) routine.
    number of rows in matrix A:       67
    number of columns in matrix A:    67
    entries in matrix A:              294
    memory usage reported in:         8-byte Units
    size of int:                      4 bytes
    size of UF_long:                  8 bytes
    size of pointer:                  8 bytes
    size of numerical entry:          8 bytes

    strategy used:                    unsymmetric
    ordering used:                    colamd on A
    modify Q during factorization:    yes
    prefer diagonal pivoting:         no
    pivots with zero Markowitz cost:               1
    submatrix S after removing zero-cost pivots:
        number of "dense" rows:                    0
        number of "dense" columns:                 0
        number of empty rows:                      0
        number of empty columns                    0
        submatrix S not square or diagonal not preserved
    symbolic factorization defragmentations:       1
    symbolic memory usage (Units):                 1628
    symbolic memory usage (MBytes):                0.0
    Symbolic size (Units):                         241
    Symbolic size (MBytes):                        0
    symbolic factorization CPU time (sec):         0.00
    symbolic factorization wallclock time(sec):    0.00

    matrix scaled: yes (divided each row by sum of abs values in each row)
    minimum sum (abs (rows of A)):              4.00000e-01
    maximum sum (abs (rows of A)):              6.14337e+00

    symbolic/numeric factorization:      upper bound               actual      %
    variable-sized part of Numeric object:
        initial size (Units)                    1706                 1568    92%
        peak size (Units)                       5708                 3575    63%
        final size (Units)                      1489                  656    44%
    Numeric final size (Units)                  1969                 1103    56%
    Numeric final size (MBytes)                  0.0                  0.0    56%
    peak memory usage (Units)                   7046                 4913    70%
    peak memory usage (MBytes)                   0.1                  0.0    70%
    numeric factorization flops          1.32810e+04          2.16900e+03    16%
    nz in L (incl diagonal)                      548                  316    58%
    nz in U (incl diagonal)                      827                  305    37%
    nz in L+U (incl diagonal)                   1308                  554    42%
    largest front (# entries)                    380                   70    18%
    largest # rows in front                       19                   10    53%
    largest # columns in front                    20                   10    50%

    initial allocation ratio used:                 0.7
    # of forced updates due to frontal growth:     0
    nz in L (incl diagonal), if none dropped       316
    nz in U (incl diagonal), if none dropped       305
    number of small entries dropped                0
    nonzeros on diagonal of U:                     67
    min abs. value on diagonal of U:               1.05e-01
    max abs. value on diagonal of U:               1.15e+00
    estimate of reciprocal of condition number:    9.07e-02
    indices in compressed pattern:                 277
    numerical values stored in Numeric object:     557
    numeric factorization defragmentations:        1
    numeric factorization reallocations:           1
    costly numeric factorization reallocations:    0
    numeric factorization CPU time (sec):          0.00
    numeric factorization wallclock time (sec):    0.00
    symbolic + numeric CPU time (sec):             0.00
    symbolic + numeric wall clock time (sec):      0.00


P * (R\C) * Q - L*U should be zero:
norm (P*(R\C)*Q - L*U, 1) = 1.17961e-16 (exact) 5.55112e-17 (estimated)

Solution to Ax=b via UMFPACK, using the factors of C:
x = R \ (P' * (L' \ (U' \ (Q' * b)))) ;
Solution to Ax=b via MATLAB:
Difference between UMFPACK and MATLAB solution: 3.55271e-15

--------------------------------------------------------------

Solve AX=B, where B is n-by-10, and sparse

umfpack: numeric factorization
UMFPACK V5.0.1 (Aug 31, 2006), Control:
    Matrix entry defined as: double
    Int (generic integer) defined as: int

    1: print level: 2
    2: dense row parameter:    0.2
        "dense" rows have    > max (16, (0.2)*16*sqrt(n_col) entries)
    3: dense column parameter: 0.2
        "dense" columns have > max (16, (0.2)*16*sqrt(n_row) entries)
    4: pivot tolerance: 0.1
    5: block size for dense matrix kernels: 32
    6: strategy: 0 (auto)
    7: initial allocation ratio: 0.7
    8: max iterative refinement steps: 2
    13: 2-by-2 pivot tolerance: 0.01
    14: Q fixed during numerical factorization: 0 (auto)
    15: AMD dense row/col parameter:    10
       "dense" rows/columns have > max (16, (10)*sqrt(n)) entries
        Only used if the AMD ordering is used.
    16: diagonal pivot tolerance: 0.001
        Only used if diagonal pivoting is attempted.
    17: scaling: 1 (divide each row by sum of abs. values in each row)
    18: frontal matrix allocation ratio: 0.5
    19: drop tolerance: 0
    20: AMD and COLAMD aggressive absorption: 1 (yes)

    The following options can only be changed at compile-time:
    9: BLAS library used:  Fortran BLAS.  size of BLAS integer: 4
    10: compiled for MATLAB
    11: CPU timer is POSIX times ( ) routine.
    12: compiled for normal operation (debugging disabled)
    computer/operating system: Linux
    size of int: 4 UF_long: 8 Int: 4 pointer: 8 double: 8 Entry: 8 (in bytes)

UMFPACK V5.0.1 (Aug 31, 2006), Info:
    matrix entry defined as:          double
    Int (generic integer) defined as: int
    BLAS library used: Fortran BLAS.  size of BLAS integer: 4
    MATLAB:                           yes.
    CPU timer:                        POSIX times ( ) routine.
    number of rows in matrix A:       67
    number of columns in matrix A:    67
    entries in matrix A:              294
    memory usage reported in:         8-byte Units
    size of int:                      4 bytes
    size of UF_long:                  8 bytes
    size of pointer:                  8 bytes
    size of numerical entry:          8 bytes

    strategy used:                    unsymmetric
    ordering used:                    colamd on A
    modify Q during factorization:    yes
    prefer diagonal pivoting:         no
    pivots with zero Markowitz cost:               1
    submatrix S after removing zero-cost pivots:
        number of "dense" rows:                    0
        number of "dense" columns:                 0
        number of empty rows:                      0
        number of empty columns                    0
        submatrix S not square or diagonal not preserved
    symbolic factorization defragmentations:       1
    symbolic memory usage (Units):                 1639
    symbolic memory usage (MBytes):                0.0
    Symbolic size (Units):                         252
    Symbolic size (MBytes):                        0
    symbolic factorization CPU time (sec):         0.00
    symbolic factorization wallclock time(sec):    0.00

    matrix scaled: yes (divided each row by sum of abs values in each row)
    minimum sum (abs (rows of A)):              1.00000e+00
    maximum sum (abs (rows of A)):              6.59005e+00

    symbolic/numeric factorization:      upper bound               actual      %
    variable-sized part of Numeric object:
        initial size (Units)                    1711                 1577    92%
        peak size (Units)                       6115                 3581    59%
        final size (Units)                      1628                  677    42%
    Numeric final size (Units)                  2108                 1124    53%
    Numeric final size (MBytes)                  0.0                  0.0    53%
    peak memory usage (Units)                   7476                 4942    66%
    peak memory usage (MBytes)                   0.1                  0.0    66%
    numeric factorization flops          1.41920e+04          2.45200e+03    17%
    nz in L (incl diagonal)                      542                  322    59%
    nz in U (incl diagonal)                      902                  339    38%
    nz in L+U (incl diagonal)                   1377                  594    43%
    largest front (# entries)                    483                   80    17%
    largest # rows in front                       21                   10    48%
    largest # columns in front                    23                   11    48%

    initial allocation ratio used:                 0.7
    # of forced updates due to frontal growth:     0
    nz in L (incl diagonal), if none dropped       322
    nz in U (incl diagonal), if none dropped       339
    number of small entries dropped                0
    nonzeros on diagonal of U:                     67
    min abs. value on diagonal of U:               2.74e-02
    max abs. value on diagonal of U:               2.28e+00
    estimate of reciprocal of condition number:    1.20e-02
    indices in compressed pattern:                 262
    numerical values stored in Numeric object:     595
    numeric factorization defragmentations:        1
    numeric factorization reallocations:           1
    costly numeric factorization reallocations:    0
    numeric factorization CPU time (sec):          0.00
    numeric factorization wallclock time (sec):    0.00
    symbolic + numeric CPU time (sec):             0.00
    symbolic + numeric wall clock time (sec):      0.00

Difference between UMFPACK and MATLAB solution: 7.11313e-14

--------------------------------------------------------------

Solve AX=B, where B is n-by-10, and sparse, using umfpack_btf

umfpack: numeric factorization
UMFPACK V5.0.1 (Aug 31, 2006), Control:
    Matrix entry defined as: double
    Int (generic integer) defined as: int

    1: print level: 2
    2: dense row parameter:    0.2
        "dense" rows have    > max (16, (0.2)*16*sqrt(n_col) entries)
    3: dense column parameter: 0.2
        "dense" columns have > max (16, (0.2)*16*sqrt(n_row) entries)
    4: pivot tolerance: 0.1
    5: block size for dense matrix kernels: 32
    6: strategy: 0 (auto)
    7: initial allocation ratio: 0.7
    8: max iterative refinement steps: 2
    13: 2-by-2 pivot tolerance: 0.01
    14: Q fixed during numerical factorization: 0 (auto)
    15: AMD dense row/col parameter:    10
       "dense" rows/columns have > max (16, (10)*sqrt(n)) entries
        Only used if the AMD ordering is used.
    16: diagonal pivot tolerance: 0.001
        Only used if diagonal pivoting is attempted.
    17: scaling: 1 (divide each row by sum of abs. values in each row)
    18: frontal matrix allocation ratio: 0.5
    19: drop tolerance: 0
    20: AMD and COLAMD aggressive absorption: 1 (yes)

    The following options can only be changed at compile-time:
    9: BLAS library used:  Fortran BLAS.  size of BLAS integer: 4
    10: compiled for MATLAB
    11: CPU timer is POSIX times ( ) routine.
    12: compiled for normal operation (debugging disabled)
    computer/operating system: Linux
    size of int: 4 UF_long: 8 Int: 4 pointer: 8 double: 8 Entry: 8 (in bytes)

UMFPACK V5.0.1 (Aug 31, 2006), Info:
    matrix entry defined as:          double
    Int (generic integer) defined as: int
    BLAS library used: Fortran BLAS.  size of BLAS integer: 4
    MATLAB:                           yes.
    CPU timer:                        POSIX times ( ) routine.
    number of rows in matrix A:       66
    number of columns in matrix A:    66
    entries in matrix A:              292
    memory usage reported in:         8-byte Units
    size of int:                      4 bytes
    size of UF_long:                  8 bytes
    size of pointer:                  8 bytes
    size of numerical entry:          8 bytes

    strategy used:                    unsymmetric
    ordering used:                    colamd on A
    modify Q during factorization:    yes
    prefer diagonal pivoting:         no
    pivots with zero Markowitz cost:               0
    submatrix S after removing zero-cost pivots:
        number of "dense" rows:                    0
        number of "dense" columns:                 0
        number of empty rows:                      0
        number of empty columns                    0
        submatrix S square and diagonal preserved
    pattern of square submatrix S:
        number rows and columns                    66
        symmetry of nonzero pattern:               0.106195
        nz in S+S' (excl. diagonal):               428
        nz on diagonal of matrix S:                66
        fraction of nz on diagonal:                1.000000
    2-by-2 pivoting to place large entries on diagonal:
        # of small diagonal entries of S:          0
        # unmatched:                               0
        symmetry of P2*S:                          0.106195
        nz in P2*S+(P2*S)' (excl. diag.):          428
        nz on diagonal of P2*S:                    66
        fraction of nz on diag of P2*S:            1.000000
    symbolic factorization defragmentations:       2
    symbolic memory usage (Units):                 1623
    symbolic memory usage (MBytes):                0.0
    Symbolic size (Units):                         256
    Symbolic size (MBytes):                        0
    symbolic factorization CPU time (sec):         0.00
    symbolic factorization wallclock time(sec):    0.00

    matrix scaled: yes (divided each row by sum of abs values in each row)
    minimum sum (abs (rows of A)):              1.45950e+00
    maximum sum (abs (rows of A)):              6.59005e+00

    symbolic/numeric factorization:      upper bound               actual      %
    variable-sized part of Numeric object:
        initial size (Units)                    1707                 1572    92%
        peak size (Units)                       5974                 3518    59%
        final size (Units)                      1593                  730    46%
    Numeric final size (Units)                  2071                 1175    57%
    Numeric final size (MBytes)                  0.0                  0.0    57%
    peak memory usage (Units)                   7332                 4876    67%
    peak memory usage (MBytes)                   0.1                  0.0    67%
    numeric factorization flops          1.33160e+04          3.09400e+03    23%
    nz in L (incl diagonal)                      532                  350    66%
    nz in U (incl diagonal)                      869                  366    42%
    nz in L+U (incl diagonal)                   1335                  650    49%
    largest front (# entries)                    441                  108    24%
    largest # rows in front                       21                   10    48%
    largest # columns in front                    21                   12    57%

    initial allocation ratio used:                 0.7
    # of forced updates due to frontal growth:     0
    nz in L (incl diagonal), if none dropped       350
    nz in U (incl diagonal), if none dropped       366
    number of small entries dropped                0
    nonzeros on diagonal of U:                     66
    min abs. value on diagonal of U:               2.64e-02
    max abs. value on diagonal of U:               9.72e+00
    estimate of reciprocal of condition number:    2.71e-03
    indices in compressed pattern:                 245
    numerical values stored in Numeric object:     658
    numeric factorization defragmentations:        1
    numeric factorization reallocations:           1
    costly numeric factorization reallocations:    0
    numeric factorization CPU time (sec):          0.01
    numeric factorization wallclock time (sec):    0.00
    numeric factorization mflops (CPU time):       0.31
    symbolic + numeric CPU time (sec):             0.01
    symbolic + numeric mflops (CPU time):          0.31
    symbolic + numeric wall clock time (sec):      0.00

Difference between UMFPACK and MATLAB solution: 6.44239e-14

--------------------------------------------------------------

Solve A'X=B, where B is n-by-10, and sparse

umfpack: numeric factorization
UMFPACK V5.0.1 (Aug 31, 2006), Control:
    Matrix entry defined as: double
    Int (generic integer) defined as: int

    1: print level: 2
    2: dense row parameter:    0.2
        "dense" rows have    > max (16, (0.2)*16*sqrt(n_col) entries)
    3: dense column parameter: 0.2
        "dense" columns have > max (16, (0.2)*16*sqrt(n_row) entries)
    4: pivot tolerance: 0.1
    5: block size for dense matrix kernels: 32
    6: strategy: 0 (auto)
    7: initial allocation ratio: 0.7
    8: max iterative refinement steps: 2
    13: 2-by-2 pivot tolerance: 0.01
    14: Q fixed during numerical factorization: 0 (auto)
    15: AMD dense row/col parameter:    10
       "dense" rows/columns have > max (16, (10)*sqrt(n)) entries
        Only used if the AMD ordering is used.
    16: diagonal pivot tolerance: 0.001
        Only used if diagonal pivoting is attempted.
    17: scaling: 1 (divide each row by sum of abs. values in each row)
    18: frontal matrix allocation ratio: 0.5
    19: drop tolerance: 0
    20: AMD and COLAMD aggressive absorption: 1 (yes)

    The following options can only be changed at compile-time:
    9: BLAS library used:  Fortran BLAS.  size of BLAS integer: 4
    10: compiled for MATLAB
    11: CPU timer is POSIX times ( ) routine.
    12: compiled for normal operation (debugging disabled)
    computer/operating system: Linux
    size of int: 4 UF_long: 8 Int: 4 pointer: 8 double: 8 Entry: 8 (in bytes)

UMFPACK V5.0.1 (Aug 31, 2006), Info:
    matrix entry defined as:          double
    Int (generic integer) defined as: int
    BLAS library used: Fortran BLAS.  size of BLAS integer: 4
    MATLAB:                           yes.
    CPU timer:                        POSIX times ( ) routine.
    number of rows in matrix A:       67
    number of columns in matrix A:    67
    entries in matrix A:              294
    memory usage reported in:         8-byte Units
    size of int:                      4 bytes
    size of UF_long:                  8 bytes
    size of pointer:                  8 bytes
    size of numerical entry:          8 bytes

    strategy used:                    unsymmetric
    ordering used:                    colamd on A
    modify Q during factorization:    yes
    prefer diagonal pivoting:         no
    pivots with zero Markowitz cost:               1
    submatrix S after removing zero-cost pivots:
        number of "dense" rows:                    0
        number of "dense" columns:                 0
        number of empty rows:                      0
        number of empty columns                    0
        submatrix S not square or diagonal not preserved
    symbolic factorization defragmentations:       1
    symbolic memory usage (Units):                 1628
    symbolic memory usage (MBytes):                0.0
    Symbolic size (Units):                         241
    Symbolic size (MBytes):                        0
    symbolic factorization CPU time (sec):         0.00
    symbolic factorization wallclock time(sec):    0.00

    matrix scaled: yes (divided each row by sum of abs values in each row)
    minimum sum (abs (rows of A)):              4.00000e-01
    maximum sum (abs (rows of A)):              6.14337e+00

    symbolic/numeric factorization:      upper bound               actual      %
    variable-sized part of Numeric object:
        initial size (Units)                    1706                 1568    92%
        peak size (Units)                       5708                 3575    63%
        final size (Units)                      1489                  656    44%
    Numeric final size (Units)                  1969                 1103    56%
    Numeric final size (MBytes)                  0.0                  0.0    56%
    peak memory usage (Units)                   7046                 4913    70%
    peak memory usage (MBytes)                   0.1                  0.0    70%
    numeric factorization flops          1.32810e+04          2.16900e+03    16%
    nz in L (incl diagonal)                      548                  316    58%
    nz in U (incl diagonal)                      827                  305    37%
    nz in L+U (incl diagonal)                   1308                  554    42%
    largest front (# entries)                    380                   70    18%
    largest # rows in front                       19                   10    53%
    largest # columns in front                    20                   10    50%

    initial allocation ratio used:                 0.7
    # of forced updates due to frontal growth:     0
    nz in L (incl diagonal), if none dropped       316
    nz in U (incl diagonal), if none dropped       305
    number of small entries dropped                0
    nonzeros on diagonal of U:                     67
    min abs. value on diagonal of U:               1.05e-01
    max abs. value on diagonal of U:               1.15e+00
    estimate of reciprocal of condition number:    9.07e-02
    indices in compressed pattern:                 277
    numerical values stored in Numeric object:     557
    numeric factorization defragmentations:        1
    numeric factorization reallocations:           1
    costly numeric factorization reallocations:    0
    numeric factorization CPU time (sec):          0.00
    numeric factorization wallclock time (sec):    0.00
    symbolic + numeric CPU time (sec):             0.00
    symbolic + numeric wall clock time (sec):      0.00

Difference between UMFPACK and MATLAB solution: 8.93154e-14

--------------------------------------------------------------
det(A): -4.07453e-05  UMFPACK determinant: -4.07453e-05
diary off
